plugins {
    id 'kotlin-multiplatform' version '1.3.10'
}
repositories {
    mavenCentral()
}
group = GROUP
version = VERSION_NAME

apply plugin: 'jacoco'
//apply plugin: 'maven-publish'

jacoco {
    toolVersion = "0.8.2"
}

task coverageReportJVM(type: JacocoReport) {
    //dependsOn = test
    group = "Reporting"
    description = "Generate Jacoco coverage report."
    classDirectories = fileTree(dir: "$buildDir/classes/kotlin/jvm/main")
    def coverageSourceDirs = ["src/commonMain/kotlin", "src/jvmMain/kotlin"]
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/jacoco/jvmTest.exec")
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

final def os = org.gradle.internal.os.OperatingSystem.current()

kotlin {
    final def nativePreset = os.isWindows() ? presets.mingwX64
            : os.isLinux()   ? presets.linuxX64
            : os.isMacOsX()  ? presets.macosX64
            : /*unknown host*/ null

    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(nativePreset, 'native')
        //fromPreset(presets.js, 'js')
        // For ARM, preset should be changed to presets.iosArm32 or presets.iosArm64
        // For Linux, preset should be changed to e.g. presets.linuxX64
        // For MacOS, preset should be changed to e.g. presets.macosX64
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }
        jsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
        nativeMain {
        }
        nativeTest {
        }
    }
}

apply from: 'publish.gradle'
